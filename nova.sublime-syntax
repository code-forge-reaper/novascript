%YAML 1.2
---
name: NovaScript
file_extensions:
  - nova
scope: source.nova

contexts:
  main:
    - include: comments
    - include: strings
    - include: numbers
    - include: function_definitions
    - include: namespace_definition
    - include: keywords
    - include: builtins
    - include: function_calls
    - include: operators
    - include: types
    - match: \b[a-zA-Z_]\w*\b
      scope: variable.other.nova

  comments:
    - match: '//.*$'
      scope: comment.line.double-slash.nova
    - match: '/\*'
      scope: comment.block.nova
      push:
        - meta_scope: comment.block.nova
        - match: '.*\*/'
          pop: true
        - match: '.+'

  strings:
    - match: '"'
      scope: punctuation.definition.string.begin.nova
      push: double_quoted_string

  double_quoted_string:
    - meta_scope: string.quoted.double.nova
    - match: '\\.'
      scope: constant.character.escape.nova
    - match: '"'
      scope: punctuation.definition.string.end.nova
      pop: true

  numbers:
    - match: \b-?\d+(\.\d+)?\b
      scope: constant.numeric.nova

  keywords:
    # Declarations
    - match: \b(var|func|def|label|jmp|return|import)\b
      scope: keyword.declaration.nova
      # import "some module" as alias
    - match: \bas\b\s+(\w+)
      captures:
        1: entity.name.label.nova
      scope: keyword.declaration.nova


    # Control flow
    - match: \b(for|forEach|while|do|in|end|else|if|try|errored|defer)\b
      scope: keyword.control.flow.nova

    # Types
    - match: \b(string|number|boolean|void)\b
      scope: storage.type.nova

    # builtin
    - match: \b(undefined|null|NaN)\b
      scope: constant.language.nova

  namespace_definition:
    - match: \b(namespace|using)\b\s+(\w+)
      captures:
        1: entity.name.namespace.nova
      scope: keyword.declaration.nova

  function_definitions:
    - match: \bfunc\b\s+(\w+)
      captures:
        1: entity.name.function.definition.nova
      scope: keyword.declaration.nova

  function_calls:
    - match: \b[a-zA-Z_]\w*(?=\()
      scope: entity.name.function.nova

  builtins:
    - match: \b(true|false)\b
      scope: constant.language.nova

  types: # the "keyword.declaration.nova" is just here because i don't know what else to label it as
    - match: \b(switch|case|default)\b
      captures:
        1: keyword.declaration.nova
      scope: keyword.declaration.nova

  operators:
    - match: \.\.\.
      scope: keyword.operator.variadic.nova
    - match: ==|!=|<=|>=|\+=|-=|\*=|/=|&&|\|\||[=+\-*/<>!]
      scope: keyword.operator.nova
    - match: '[\(\)\[\]\{\}\.,:;]'
      scope: punctuation.separator.nova
